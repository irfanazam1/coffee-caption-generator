version: '3.8'

services:
  # OAuth Service
  oauth-service:
    build: .
    container_name: oauth-service
    ports:
      - "8001:8001"
    environment:
      - DB_HOST=oauth-db
      - DB_PORT=5432
      - DB_NAME=oauth_db
      - DB_USER=postgres
      - DB_PASSWORD=${DB_PASSWORD:-oauth_secure_pass}
      - ENCRYPTION_KEY=${ENCRYPTION_KEY}
      - SERVICE_API_KEY=${SERVICE_API_KEY:-dev-service-key-change-in-production}
      - SECRET_KEY=${SECRET_KEY:-dev-secret-key}
      - REDIS_URL=redis://redis:6379
      - BASE_CALLBACK_URL=${BASE_CALLBACK_URL:-http://localhost:8001}
      - INSTAGRAM_CLIENT_ID=${INSTAGRAM_CLIENT_ID}
      - INSTAGRAM_CLIENT_SECRET=${INSTAGRAM_CLIENT_SECRET}
      - FACEBOOK_CLIENT_ID=${FACEBOOK_CLIENT_ID}
      - FACEBOOK_CLIENT_SECRET=${FACEBOOK_CLIENT_SECRET}
      - DEBUG=true
    depends_on:
      oauth-db:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - oauth-network
    restart: unless-stopped

  # PostgreSQL Database
  oauth-db:
    image: postgres:15-alpine
    container_name: oauth-db
    environment:
      - POSTGRES_DB=oauth_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${DB_PASSWORD:-oauth_secure_pass}
    ports:
      - "5434:5432"
    volumes:
      - oauth-db-data:/var/lib/postgresql/data
      - ./migrations/init_oauth_schema.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - oauth-network
    restart: unless-stopped

  # Redis (Optional - for job queue)
  redis:
    image: redis:7-alpine
    container_name: oauth-redis
    ports:
      - "6379:6379"
    volumes:
      - oauth-redis-data:/data
    networks:
      - oauth-network
    restart: unless-stopped

volumes:
  oauth-db-data:
  oauth-redis-data:

networks:
  oauth-network:
    driver: bridge
