"""
Quick Twitter Media Upload Test using Bearer Token from .env
"""
import sys
import os
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

from app.publishers.twitter_publisher import twitter_publisher
from app.config import settings

# Simple 1x1 red pixel JPEG (minimum valid JPEG)
TEST_IMAGE = bytes([
    0xFF, 0xD8, 0xFF, 0xE0, 0x00, 0x10, 0x4A, 0x46, 0x49, 0x46, 0x00, 0x01,
    0x01, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0xFF, 0xDB, 0x00, 0x43,
    0x00, 0x08, 0x06, 0x06, 0x07, 0x06, 0x05, 0x08, 0x07, 0x07, 0x07, 0x09,
    0x09, 0x08, 0x0A, 0x0C, 0x14, 0x0D, 0x0C, 0x0B, 0x0B, 0x0C, 0x19, 0x12,
    0x13, 0x0F, 0x14, 0x1D, 0x1A, 0x1F, 0x1E, 0x1D, 0x1A, 0x1C, 0x1C, 0x20,
    0x24, 0x2E, 0x27, 0x20, 0x22, 0x2C, 0x23, 0x1C, 0x1C, 0x28, 0x37, 0x29,
    0x2C, 0x30, 0x31, 0x34, 0x34, 0x34, 0x1F, 0x27, 0x39, 0x3D, 0x38, 0x32,
    0x3C, 0x2E, 0x33, 0x34, 0x32, 0xFF, 0xC0, 0x00, 0x0B, 0x08, 0x00, 0x01,
    0x00, 0x01, 0x01, 0x01, 0x11, 0x00, 0xFF, 0xC4, 0x00, 0x14, 0x00, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x03, 0xFF, 0xC4, 0x00, 0x14, 0x10, 0x01, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0xFF, 0xDA, 0x00, 0x08, 0x01, 0x01, 0x00, 0x00, 0x3F, 0x00,
    0x37, 0xFF, 0xD9
])

print("=" * 70)
print("üß™ QUICK TWITTER MEDIA UPLOAD TEST")
print("=" * 70)

print("\n1Ô∏è‚É£ Checking bearer token from .env...")
if not settings.TWITTER_BEARER_TOKEN:
    print("‚ùå TWITTER_BEARER_TOKEN not found in .env")
    sys.exit(1)

bearer_token = settings.TWITTER_BEARER_TOKEN
print(f"‚úì Bearer token found: {bearer_token[:30]}...")

print(f"\n2Ô∏è‚É£ Testing media upload with v1.1 endpoint...")
print(f"   Image size: {len(TEST_IMAGE)} bytes")

try:
    media_id = twitter_publisher._upload_media(
        access_token=bearer_token,
        image_data=TEST_IMAGE
    )
    
    print(f"\n‚úÖ SUCCESS! Media uploaded!")
    print(f"   Media ID: {media_id}")
    print(f"\nüéâ The v1.1 endpoint fix is working!")
    
except Exception as e:
    print(f"\n‚ùå FAILED: {str(e)}")
    print("\nüìã Error details:")
    import traceback
    traceback.print_exc()
    sys.exit(1)
